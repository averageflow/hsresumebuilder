---
name: "pre-release"

on:
  push:
    branches:
      - "master"

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-release:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        release-target-name:
          - "Linux"
          - "macOS"
          - "Windows"
        build-output-folder:
          - x86_64-linux
          - x86_64-darwin
          - x86_64-windows

    env:
      GHC_VERSION: "8.10.7"
      CABAL_VERSION: "3.6.2.0"

    name: "Pre-release for ${{ matrix.release-target-name }}"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: haskell/actions/setup@v2
        with:
          ghc-version: "${{ env.GHC_VERSION }}"
          cabal-version: "${{ env.CABAL_VERSION }}"
      - name: Freeze Cabal plan
        run: cabal freeze

      - name: Cache Cabal build artifacts
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.setup-haskell-build-env.outputs.cabal-store }}
            dist-newstyle
          key: ${{ matrix.os }}-cabal-${{ env.GHC_VERSION }}-${{ hashFiles('cabal.project.freeze') }}
          restore-keys: |
            ${{ matrix.os }}-cabal-${{ env.GHC_VERSION }}

      - name: "Build & test"
        run: |
          cabal build
          ls -lath dist-newstyle/build/

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Dev build for ${{ matrix.release-target-name }}"
          files: |
            LICENSE
            dist-newstyle/build/${{ matrix.build-output-folder }}/ghc-${{ env.GHC_VERSION }}/hsresumebuilder-0.1.0.0/x/hsresumebuilder/build/hsresumebuilder/hsresumebuilder
